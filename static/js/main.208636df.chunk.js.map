{"version":3,"sources":["ui/OuterHTMLView.js","ui/Activity.js","ui/Transcript.js","hook/useValueRef.js","util/uniqueId.js","App.js","reportWebVitals.js","index.js"],"names":["OuterHTMLView","elementRef","useState","outerHTML","setOuterHTML","updateOuterHTML","useCallback","format","current","parser","plugins","parserHTML","useEffect","observer","MutationObserver","observe","attributes","childList","subtree","disconnect","className","Activity","children","end","id","classNames","TRANSCRIPT","a0","from","text","timestamp","a1","a2","a3","Transcript","forwardRef","_","ref","sortedTranscriptArray","Object","entries","sort","sortedTranscriptArrayRef","value","useRef","useValueRef","focusedActivityKey","setFocusedActivityKey","activeDescendantId","useMemo","random","toString","substr","focusRelativeActivity","delta","index","findIndex","nextIndex","Math","max","min","length","handleKeyDown","event","key","preventDefault","onKeyDown","tabIndex","map","activity","undefined","App","transcriptRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.208636df.chunk.js","sourcesContent":["import { format } from 'prettier/standalone';\nimport parserHTML from 'prettier/parser-html';\n\nimport './OuterHTMLView.css';\nimport { useCallback, useEffect, useState } from 'react';\n\nconst OuterHTMLView = ({ elementRef }) => {\n  const [outerHTML, setOuterHTML] = useState('');\n\n  const updateOuterHTML = useCallback(() => {\n    setOuterHTML(format(elementRef.current.outerHTML, { parser: 'html', plugins: [parserHTML] }));\n  }, [elementRef, setOuterHTML]);\n\n  useEffect(() => {\n    const observer = new MutationObserver(updateOuterHTML);\n\n    observer.observe(elementRef.current, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n\n    updateOuterHTML();\n\n    return () => observer.disconnect();\n  }, [elementRef, updateOuterHTML]);\n\n  return (\n    <div className=\"outer-html-view\">\n      <pre className=\"outer-html-view__code\">{outerHTML}</pre>\n    </div>\n  );\n};\n\nexport default OuterHTMLView;\n","import classNames from 'classnames';\n\nimport './Activity.css';\n\nconst Activity = ({ children, end, id }) => {\n  return (\n    <div className={classNames('activity', { 'activity--end': end })} id={id}>\n      <div aria-roledescription=\"message\" className=\"activity__bubble\">\n        {children}\n      </div>\n      <div className=\"activity__timestamp\">Just now</div>\n    </div>\n  );\n};\n\nexport default Activity;\n","import { forwardRef, useCallback, useMemo, useState } from 'react';\n\nimport './Transcript.css';\nimport Activity from './Activity';\nimport uniqueId from '../util/uniqueId';\nimport useValueRef from '../hook/useValueRef';\n\nconst TRANSCRIPT = {\n  a0: {\n    from: 'user',\n    text: 'Hello, World!',\n    timestamp: 0\n  },\n  a1: {\n    from: 'bot',\n    text: 'Aloha!',\n    timestamp: 1\n  },\n  a2: {\n    from: 'user',\n    text: 'Good morning.',\n    timestamp: 2\n  },\n  a3: {\n    from: 'bot',\n    text: 'Hello, Alex.',\n    timestamp: 3\n  }\n};\n\nconst Transcript = forwardRef((_, ref) => {\n  const sortedTranscriptArray = Object.entries(TRANSCRIPT).sort(([, { timestamp: x }], [, { timestamp: y }]) => x - y);\n\n  const sortedTranscriptArrayRef = useValueRef(sortedTranscriptArray);\n\n  const [focusedActivityKey, setFocusedActivityKey] = useState(() => sortedTranscriptArray[0][0]);\n\n  const activeDescendantId = useMemo(() => {\n    return `transcript__active-descendant-${uniqueId()}`;\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [focusedActivityKey]);\n\n  const focusRelativeActivity = useCallback(\n    delta => {\n      setFocusedActivityKey(focusedActivityKey => {\n        const index = sortedTranscriptArrayRef.current.findIndex(([key]) => key === focusedActivityKey);\n\n        const nextIndex = Math.max(0, Math.min(sortedTranscriptArrayRef.current.length - 1, index + delta));\n\n        return sortedTranscriptArrayRef.current[nextIndex][0];\n      });\n    },\n    [setFocusedActivityKey, sortedTranscriptArrayRef]\n  );\n\n  const handleKeyDown = useCallback(\n    event => {\n      switch (event.key) {\n        case 'ArrowUp':\n          focusRelativeActivity(-1);\n          event.preventDefault();\n          break;\n\n        case 'ArrowDown':\n          focusRelativeActivity(1);\n          event.preventDefault();\n          break;\n\n        default:\n          break;\n      }\n    },\n    [focusRelativeActivity]\n  );\n\n  return (\n    <div\n      aria-activedescendant={activeDescendantId}\n      aria-roledescription=\"transcript\"\n      className=\"transcript\"\n      onKeyDown={handleKeyDown}\n      ref={ref}\n      tabIndex={0}\n    >\n      <ul className=\"transcript__list\">\n        {sortedTranscriptArray.map(([key, activity]) => (\n          <li\n            aria-labelledby={`transcript__row-id-${key}`}\n            className=\"transcript__row\"\n            id={key === focusedActivityKey ? activeDescendantId : undefined}\n            key={key}\n          >\n            <Activity end={activity.from === 'user'} id={`transcript__row-id-${key}`}>\n              {activity.text}\n            </Activity>\n            {key === focusedActivityKey && <div className=\"transcript__row-focus-ring\" />}\n          </li>\n        ))}\n      </ul>\n      <div className=\"transcript__focus-ring\" />\n    </div>\n  );\n});\n\nexport default Transcript;\n","import { useRef } from 'react';\n\nexport default function useValueRef(value) {\n  const ref = useRef();\n\n  ref.current = value;\n\n  return ref;\n}\n","import random from 'math-random';\n\nexport default function uniqueId() {\n  return random().toString(36).substr(2, 5);\n}\n","import { useRef } from 'react';\nimport './App.css';\n\nimport OuterHTMLView from './ui/OuterHTMLView';\nimport Transcript from './ui/Transcript';\n\nfunction App() {\n  const transcriptRef = useRef();\n\n  return (\n    <div className=\"app\">\n      <section className=\"app__panel\">\n        <h1 className=\"app__panel-header\">Accessible transcript</h1>\n        <div className=\"app__panel-body\">\n          <Transcript ref={transcriptRef} />\n        </div>\n      </section>\n      <section className=\"app__panel\">\n        <h1 className=\"app__panel-header\">Outer HTML</h1>\n        <div className=\"app__panel-body\">\n          <OuterHTMLView elementRef={transcriptRef} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}